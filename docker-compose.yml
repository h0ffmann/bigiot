version: '3'
services:
  zk:
    image: zookeeper:3.4.10
    container_name: zk
    restart: on-failure
    ports:
      - "2181:2181"


  kafka:
    image: wurstmeister/kafka:2.11-1.1.1
    container_name: kafka
    restart: on-failure
    ports:
      - "9092:9092"
      - "9999:9999"
    depends_on:
      - zk
    volumes:
      - "./agent:/opt/kafka/metrics"
    environment:
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka -Dcom.sun.management.jmxremote.rmi.port=1099"
      JMX_PORT: "1099"
      KAFKA_ZOOKEEPER_CONNECT: zk:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9094,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://:9094,OUTSIDE://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OPTS: "-javaagent:/opt/kafka/metrics/jmx_prometheus_javaagent-0.14.0.jar=9999:/opt/kafka/metrics/config.yml"


  kafka-manager:
    container_name: kafka-manager
    image: hlebalbau/kafka-manager:1.3.3.23
    restart: on-failure
    depends_on:
      - kafka
      - zk
    command: -Dconfig.file=/kafka-manager/conf/application.conf -Dapplication.home=/kafkamanager
    environment:
      - ZK_HOSTS=zk:2181
      - APPLICATION_SECRET=letmein
    ports:
      - "9000:9000"

  emqx:
    container_name: emqx
    image: emqx/emqx:latest
    restart: on-failure
    depends_on:
      - kafka
      - zk
    ports:
      - "18083:18083"
      - "1883:1883"

  prometheus:
    image: prom/prometheus:v2.21.0
    user: root
    container_name: prometheus
    volumes:
      - ./config:/prometheus
      - .tmp/:/data
    command:
      - '--config.file=/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/data'
    ports:
      - 9090:9090
    restart: on-failure
