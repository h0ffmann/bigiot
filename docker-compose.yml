version: '3.8'

services:

  pushgateway:
    image: prom/pushgateway:latest
    container_name: pushgateway
    ports:
      - 9091:9091
    restart: on-failure
    network_mode: host


  prometheus:
    image: prom/prometheus:latest
    user: root
    container_name: prometheus
    depends_on:
      - pushgateway
    volumes:
      - ./config:/prometheus
      - .tmp/:/data
    command:
      - '--config.file=/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/data'
    ports:
      - 9090:9090
    restart: on-failure
    network_mode: host

  grafana:
    container_name: grafana
    user: root
    image: grafana/grafana:latest-ubuntu
    volumes:
      - ./grafana:/var/lib/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    network_mode: host

    # admin public
  emqx:
    container_name: emqx
    image: emqx/emqx:latest
    restart: on-failure
    depends_on:
      - pushgateway
    environment:
      - EMQX_LOADED_PLUGINS=emqx_recon,emqx_retainer,emqx_management,emqx_dashboard,emqx_prometheus
      - EMQX_PROMETHEUS__PUSH__GATEWAY__SERVER=http://localhost:9091
      - EMQX_PROMETHEUS__INTERVAL=5000
    ports:
      - 18083:18083
      - 1883:1883
    network_mode: host

  zk:
    image: zookeeper:3.4.10
    container_name: zk
    restart: on-failure
    ports:
      - 2181:2181
    network_mode: host

  kafka:
    image: wurstmeister/kafka:2.11-1.1.1
    container_name: kafka
    restart: on-failure
    ports:
      - 9092:9092
      - 9999:9999
    depends_on:
      - zk
    volumes:
      - "./agent:/opt/kafka/metrics"
    environment:
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka -Dcom.sun.management.jmxremote.rmi.port=1099"
      JMX_PORT: "1099"
      KAFKA_ZOOKEEPER_CONNECT: localhost:2181 #zk
      KAFKA_ADVERTISED_LISTENERS: INSIDE://localhost:9094,OUTSIDE://localhost:9092 #zk first
      KAFKA_LISTENERS: INSIDE://:9094,OUTSIDE://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OPTS: "-javaagent:/opt/kafka/metrics/jmx_prometheus_javaagent-0.14.0.jar=9999:/opt/kafka/metrics/config.yml"
    network_mode: host

  kafka-manager:
    container_name: kafka-manager
    image: hlebalbau/kafka-manager:1.3.3.23
    restart: on-failure
    depends_on:
      - kafka
      - zk
    command: -Dconfig.file=/kafka-manager/conf/application.conf -Dapplication.home=/kafkamanager
    environment:
      - ZK_HOSTS=zk:2181
      - APPLICATION_SECRET=letmein
    ports:
      - 9000:9000
    network_mode: host

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    depends_on:
      - prometheus
    network_mode: host


